{"version":3,"sources":["services/personService.js","App.js","index.js"],"names":["baseUrl","PersonForm","morePerson","nameChange","numberChange","onSubmit","onChange","type","Persons","persons","search","deleteP","filterOut","filter","person","name","toLocaleLowerCase","includes","console","log","map","i","number","onClick","Fliter","searchChanger","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","searchName","setSearchName","message","setMessage","length","useEffect","axios","get","then","data","className","value","event","target","preventDefault","obj","newObj","repeat","post","response","concat","window","confirm","id","put","service","setTimeout","delete","catch","error","ReactDOM","render","document","getElementById"],"mappings":"sLACMA,EAAU,e,OC+JVC,EAAY,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,WAAWC,EAA2B,EAA3BA,WAAWC,EAAgB,EAAhBA,aACxC,OACE,8BACE,uBAAMC,SAAUH,EAAhB,UACE,yCACQ,uBAAOI,SAAUH,OAEzB,2CACU,uBAAQG,SAAUF,OAE5B,8BACE,wBAAQG,KAAK,SAAb,yBASJC,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,QAAQC,EAAkB,EAAlBA,OAAOC,EAAW,EAAXA,QACxBC,EAAWH,EAAQI,QAAO,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,oBAAoBC,SAASP,EAAOM,wBAE1F,OADAE,QAAQC,IAAI,iBAAiBP,GAE3B,8BACCA,EAAUQ,KAAI,SAACN,EAAOO,GAAR,OACb,gCACCP,EAAOC,KADR,IACeD,EAAOQ,OACtB,wBAAQC,QAAS,kBAAIZ,EAAQG,IAA7B,sBAFUO,SAWVG,EAAQ,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAEd,OACE,+BACI,qDAGE,uBAAQnB,SAAUmB,UAQbC,EAhNH,WA6GV,IA5GA,MAA8BC,mBAAS,IAAvC,mBAAOlB,EAAP,KAAgBmB,EAAhB,KACA,EAAgCD,mBAAS,IAAzC,mBAAQE,EAAR,KAAiBC,EAAjB,KACA,EAAgCH,mBAAS,IAAzC,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAkCL,mBAAS,IAA3C,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAA2BP,mBAAS,IAApC,mBAAOQ,EAAP,KAAeC,EAAf,KAwGSf,EAAE,EAAGA,EAAEZ,EAAQ4B,OAAOhB,IAC7BH,QAAQC,IAAIE,GACZH,QAAQC,IAAIc,EAAW,gBAAgBxB,EAAQY,GAAGN,KAAKC,oBAAoBC,SAASgB,EAAWjB,sBA0BjG,OApBAsB,qBAAU,WACRpB,QAAQC,IAAI,wBDtHLoB,IAAMC,IAAIxC,GCyHdyC,MAAK,SAAA3B,GACNc,EAAWd,EAAO4B,SAIpBxB,QAAQC,IAAI,qBAAqBV,KAIjC,IAEFS,QAAQC,IAAI,sBAAsBV,GAMhC,gCACE,2CACA,oBAAIkC,UAAU,UAAd,SAAyBR,IACzB,cAAC,EAAD,CAAQS,MAAOX,EAAYR,cA9DZ,SAACoB,GAClB3B,QAAQC,IAAI,gCAAgCc,GAC1CC,EAAcW,EAAMC,OAAOF,UA8D3B,2CACA,cAAC,EAAD,CAAY1C,WA/HE,SAAC2C,GAEjBA,EAAME,iBACN,IAAMC,EAAI,CACRjC,KAAMc,EACNP,OAAQS,GASVb,QAAQC,IAAI,8BAA8BV,GAG1C,IAFA,ID7BYwC,EC6BRC,GAAO,EACP5B,EAAO,EACFD,EAAE,EAAGA,EAAEZ,EAAQ4B,OAAOhB,IACxBZ,EAAQY,GAAGN,OAAOc,IACnBqB,GAAO,EACP5B,EAAOD,GAGb,GAAG6B,GDrCSD,ECuCAD,EDtCLT,IAAMY,KAAKnD,EAAQiD,ICuCrBR,MAAK,SAAAW,GACJxB,EAAWnB,EAAQ4C,OAAOD,EAASV,eAIvC,GAAIY,OAAOC,QAAQ1B,EAAQ,0EAA2E,CAClG,IAAM2B,EAAG/C,EAAQa,GAAQkC,IDtCjB,SAACA,EAAGd,GAClB,OAAOH,IAAMkB,IAAIzD,EAAQ,IAAIwD,EAAGd,ICsC1BgB,CAAoBF,EAAGR,GAEpBP,MAAK,SAAAW,GACAlC,QAAQC,IAAI,WAAWiC,GACvBxB,EAAWnB,EAAQI,QAAO,SAAAC,GAAM,OAC9BA,IAAU0C,EAAK1C,EAAQsC,EAASV,YAKhDN,EAAW,SAASP,GACpB8B,YAAW,WACTvB,EAAW,QACV,KACHlB,QAAQC,IAAI,gCAAgCV,IAgFNN,WA3EvB,SAAC0C,GAChB3B,QAAQC,IAAI,wBAAwB0B,EAAMC,OAAOF,OAC/Cd,EAAWe,EAAMC,OAAOF,QA0ExBxC,aAvEe,SAACyC,GAClB3B,QAAQC,IAAI,0BAA0B0B,EAAMC,OAAOF,OACjDZ,EAAaa,EAAMC,OAAOF,UAuE1B,yCACA,cAAC,EAAD,CAASnC,QAASA,EAASC,OAAQuB,EACnCtB,QAjEe,SAACG,GD7EL,IAAC0C,EC8EVF,OAAOC,QAAS,UAAUzC,EAAOC,KAAK,QACxCG,QAAQC,IAAI,WAAWL,EAAO0C,KD/ElBA,ECgFK1C,EAAO0C,GD/EnBjB,IAAMqB,OAAO5D,EAAQ,IAAIwD,ICgFzBf,MAAK,SAAAW,GACJxB,EAAWnB,EAAQI,QAAO,SAAA6B,GAAI,OAC5BA,GAAOU,EAASV,YAEnBmB,OAAM,SAAAC,GACL1B,EAAW,kBAAD,OAAmBtB,EAAOC,KAA1B,qD,MC7FtBgD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e79284ef.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getData =()=>{\n    return axios.get(baseUrl)\n}\n\nconst postData=(newObj)=>{\n    return axios.post(baseUrl,newObj)\n}\n\nconst deleteData=(id)=>{\n    return axios.delete(baseUrl+\"/\"+id)\n}\n\nconst upgradeData=(id,data)=>{\n    return axios.put(baseUrl+\"/\"+id,data)\n}\n\nexport{getData,postData,deleteData,upgradeData}","import React, { useState,useEffect } from 'react'\nimport axios from 'axios'\nimport * as service from './services/personService'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber]=useState('')\n  const [searchName, setSearchName]=useState('')\n  const [message,setMessage]=useState('')\n  \n  /* delete\n  axios.delete('http://localhost:3001/persons/5')\n        .then(response => {\n          setPersons(persons.filter(data=>\n            data !=response.data\n          ))\n        })\n  console.log(\"check persons\",persons);\n  */\n\n  const addPersons =(event) =>{\n    \n    event.preventDefault()\n    const obj={\n      name: newName,\n      number: newNumber\n    }\n    //check if the variable name will change.\n    \n    //simple version\n    \n    \n\n\n    console.log(\"checking list for no repeat\",persons);\n    var repeat=true\n    var number=0\n    for (var i=0; i<persons.length;i++){\n        if(persons[i].name===newName){\n          repeat=false\n          number=i\n        }\n    }\n    if(repeat){\n      service\n      .postData(obj)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n        })\n     \n    }else{\n      if (window.confirm(newName+\" is already added to phonebook, replace the old number with a new one?\")) {\n          const id=persons[number].id\n          service.upgradeData(id,obj)\n                  \n            .then(response=>{\n                  console.log(\"response\",response);\n                  setPersons(persons.filter(person=>\n                    person !==id ? person: response.data))\n                  })\n      }\n      \n    }\n    setMessage(\"Added \"+newName)\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n    console.log(\"this is the list after adding\",persons);\n  \n  }\n\n\n  const changeName=(event) =>{\n    console.log(\"this is for changname\",event.target.value);\n      setNewName(event.target.value)\n  }\n\n  const changeNumber=(event) =>{\n    console.log(\"this is for changnumber\",event.target.value);\n      setNewNumber(event.target.value)\n  }\n\n  const changeSearch=(event)=>{\n    console.log(\"checking is the search update\",searchName);\n      setSearchName(event.target.value)\n  }\n\n  const personDelete=(person)=>{\n    if (window.confirm((\"Delete \"+person.name+\" ?\"))) {\n      console.log('event is',person.id);\n    service.deleteData(person.id)\n          .then(response => {\n            setPersons(persons.filter(data=>\n              data !=response.data)\n            )}) \n          .catch(error=>{\n            setMessage(`Information of ${person.name} has already been removed from server`)\n            \n          })\n    \n    \n    \n    }\n    \n    \n  }\n\n  \n\n  \n  \n\n  for (var i=0; i<persons.length;i++){\n    console.log(i)\n    console.log(searchName,\"true or false\",persons[i].name.toLocaleLowerCase().includes(searchName.toLocaleLowerCase()))\n\n  }\n\n  //fetch the data from the server\n  \n  useEffect(()=>{\n    console.log(\"this the effect hook\");\n      service\n      .getData()\n      .then(person =>{\n      setPersons(person.data)\n      \n    })\n\n    console.log(\"check persons data\",persons);\n    \n    \n\n  },[])\n\n  console.log(\"check persons data2\",persons);\n  \n\n  \n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <h2 className=\"message\">{message}</h2>\n      <Fliter value={searchName} searchChanger={changeSearch}/>\n      \n      <h2>add a new</h2>\n      <PersonForm morePerson={addPersons} nameChange={changeName}\n      numberChange={changeNumber}/>\n\n      <h2>Numbers</h2>\n      <Persons persons={persons} search={searchName}\n      deleteP={personDelete}/>\n    </div>\n  )\n}\n\n\n\nconst PersonForm =({morePerson,nameChange,numberChange})=>{\n  return(\n    <div>\n      <form onSubmit={morePerson} >\n        <div>\n          name: <input onChange={nameChange}/>\n        </div>\n        <div>\n          number: <input  onChange={numberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n\n  )\n}\n\n\nconst Persons =({persons,search,deleteP})=>{\n  const filterOut= persons.filter(person => person.name.toLocaleLowerCase().includes(search.toLocaleLowerCase()))\n  console.log(\"filterOut is  \",filterOut);\n  return(\n    <div>\n    {filterOut.map((person,i) =>\n      <div key={i}>\n      {person.name} {person.number}\n      <button onClick={()=>deleteP(person)} >delete</button>\n    </div>\n    )}\n    </div>\n  )\n}\n\n\n\nconst Fliter =({searchChanger}) =>{\n  \n  return(\n    <form >\n        <div>\n         \n          filter shown with:\n          <input  onChange={searchChanger}/>\n        </div>\n\n      </form>\n    \n  )\n}\n\nexport default App;","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}